/*
 * systembox.hpp
 *
 *  Created on: Aug 29, 2017
 *      Author: Yarib Nev√°rez (yarib_007@hotmail.com) - root
 */

#ifndef SYSTEMBOX_HPP_
#define SYSTEMBOX_HPP_

#include "thread.hpp"
#include "devices.hpp"
#include "deviceid.hpp"

class SystemFeature: public Thread
{
public:
	SystemFeature(DeviceHandler *);
	virtual ~SystemFeature();

protected:
	LevelSensor     wasteTankSensor;
	LevelSensor     chamberTopSensor;
	LevelSensor     chamberBottomSensor;
	LeakageSensor	leakageSensor_0;
	LeakageSensor   leakageSensor_1;
	IRSensor        irSensor;
	Valve           flushValve;
	Valve           drainValve;
	Valve           shutOffValve;
	InputPin        drainLocalReq;
	InputVector     emergencySwitch;
	InputVector     appSelection;
	InputVector     drainDelaySelection;
	OutputPin       vacumGenerator;
	OutputPin       drainIndicator;
	OutputPin       leakageIndicator;
	OutputVector    pwm_0;
	OutputVector    pwm_1;
	OutputPin       relay_0;
	OutputPin       relay_1;
};

namespace SystemBox
{
wasteTankSensor(&ZYNQ_PMOD_HANDLER, &id_WASTETLEVEL);
chamberTopSensor(device_handler, &id_LEVELSENSOR_1),
chamberBottomSensor(device_handler, &id_LEVELSENSOR_0),
leakageSensor_0(device_handler, &id_LEAKSENSOR_0),
leakageSensor_1(device_handler, &id_LEAKSENSOR_1),
irSensor(device_handler, &id_IRSENSOR),
flushValve(device_handler, &id_FLUSHVALVE),
drainValve(device_handler, &id_DRAINVALVE),
shutOffValve(device_handler, &id_SHUTOFFVALVE),
drainLocalReq(device_handler, &id_DRAINLOCAL),
emergencySwitch(device_handler, &id_EMERGENCY),
appSelection(device_handler, &id_APPSELECTION),
drainDelaySelection(device_handler, &id_DRAINDELAY),
vacumGenerator(device_handler, &id_VACUMGEN),
drainIndicator(device_handler, &id_DRAININDICATOR),
leakageIndicator(device_handler, &id_LEAKINDICATOR),
pwm_0(device_handler, &id_PWM_0),
pwm_1(device_handler, &id_PWM_1),
relay_0(device_handler, &id_RELAY_0),
relay_1(device_handler, &id_RELAY_1)
}

#endif /* SYSTEMBOX_HPP_ */
