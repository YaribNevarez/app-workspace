/*
 * cccapp.hpp
 *
 *  Created on: Aug 7, 2017
 *      Author: root
 */

#ifndef CCCAPP_HPP_
#define CCCAPP_HPP_
#include "thread"
#include "devices.hpp"


class SystemBox: public Runnable
{
public:
	SystemBox(DeviceHandler *);
	~SystemBox();
protected:
	LevelSensor     wasteTankSensor;
	LevelSensor     chamberTopSensor;
	LevelSensor     chamberBottomSensor;
	LeakageSensor	leakageSensor_0;
	LeakageSensor   leakageSensor_1;
	IRSensor        irSensor;
	Valve           flushValve;
	Valve           drainValve;
	Valve           shutOffValve;
	InputPin        drainLocalReq;
	InputVector     emergencySwitch;
	InputVector     appSelection;
	InputVector     drainDelaySelection;
	OutputPin       vacumGenerator;
	OutputPin       drainIndicator;
	OutputPin       leakageIndicator;
	OutputVector    pwm_0;
	OutputVector    pwm_1;
	OutputPin       relay_0;
	OutputPin       relay_1;
};

// Multiple inheritance of two different concepts
class ControlApp: public SystemBox
{
public:
	ControlApp();
	~ControlApp();

	virtual int run(void);

protected:

	virtual int drain(void);
	class DrainProcess: public Runnable
	{
	public:
		virtual int run(void);
	};

	virtual int flush(void);
	class FlushProcess: public Runnable
	{
	public:
		virtual int run(void);
	};

	virtual int ir(void);
	class IRProcess: public Runnable
	{
	public:
		virtual int run(void);
	};

	virtual int leakage(void);
	class LeakageProcess: public Runnable
	{
	public:
		virtual int run(void);
	};

	virtual int relay(void);
	class RelayProcess: public Runnable
	{
	public:
		virtual int run(void);
	};
};


#endif /* CCCAPP_HPP_ */
