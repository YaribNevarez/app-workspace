/*
 * commander.cpp
 *
 *  Created on: Sep 8, 2017
 *      Author: root
 */
#include "devicehandler.hpp"
#include "commander.hpp"

void Commander::process(std::string command, std::string & answer)
{
	Device::InstanceVector devices = Device::get_instanceVector();
	answer.clear();

	if (command.compare(0, 4, "EXIT") == 0)
	{
		answer = "Exit TcpServer...\n";
		clear_flag(EXECUTING);
	}
	if (command.compare(0, 7, "DEVICES") == 0)
	{
		char c_answer[128];
		sprintf(c_answer, "%d\n", devices.size());
		answer = c_answer;
	}
	if (command.compare(0, 7, "DEVICE ") == 0)
	{
		uint32_t i = strtoul(command.substr(6).c_str(), NULL, 0);
		if (i < devices.size())
		{
			answer = devices[i]->get_name() + "\n";
		}
		else
		{
			answer = "NO DEVICE\n";
		}
	}
	else
	{
		Device * device = NULL;

		for (unsigned i = 0; i < devices.size(); i ++)
		{
			if (command.compare(0,
								devices[i]->get_name().size(),
								devices[i]->get_name()) == 0)
			{
				device = devices[i];
			}
		}

		if (device != NULL)
		{
			uint32_t data;
			bool device_access;
			std::string::size_type token_equal;

			token_equal = command.find("=", device->get_name().size());

			if (token_equal == string::npos)
			{
				device_access = device->read(& data);
				answer = "[READ] ";
			}
			else
			{
				data = strtoul(command.substr(token_equal + 1).c_str(), NULL, 0);
				device_access = device->write(data);
				answer = "[WRITE] ";
			}

			if (device_access)
			{
				char c_answer[128];
				sprintf(c_answer, "%s = 0x%X\n", device->get_name().c_str(), data);
				answer += c_answer;
			}
			else
			{
				answer += "Couldn't access device: " + device->get_name() + "\n";
			}
		}
	}

	if (answer.empty())
	{
		answer = "_________________ HELP _________________\n";
		answer += "List of devices:\n\n";
		for (unsigned i = 0; i < devices.size(); i ++)
		{
			answer += devices[i]->get_name() + "\n";
		}
		answer += "\n * Example reading:\n" + devices[0]->get_name() + "     (hit ENTER key)\n";
		answer += "\n * Example writing:\n" + devices[0]->get_name() + " = 1 (hit ENTER key)\n";
		answer += "\n * Get number of registered devices:\nDEVICES (hit ENTER key)\n";
		answer += "\n * Get name of a registered device:\nDEVICE 1 (hit ENTER key)\n";
		answer += "\n * Exit commander:\nEXIT (hit ENTER key)\n";
	}

	answer += "________________________________________\n";
}



